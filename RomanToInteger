/*
 * Given a roman numeral, convert it to an integer.
 * 
 * I can be placed before V (5) and X (10) to make 4 and 9. 
 * X can be placed before L (50) and C (100) to make 40 and 90. 
 * C can be placed before D (500) and M (1000) to make 400 and 900.
*/

class Solution {
    public int romanToInt(String s) {
        int num = 0;
        for(int i = 0; i < s.length(); i++) {
            if(i + 1 < s.length() && special(s.charAt(i) + s.charAt(i + 1) + "") > 0) {
                num += special(s.charAt(i) + "" + s.charAt(i + 1));
                i++;
            }
            else if(s.charAt(i) == 'I')
                num += 1;
            else
                num += integer(s.charAt(i) + "");
        }
        return num;
    }
    
    private int integer(String s) {
        switch(s) {
            case "V" : return 5;
            case "X" : return 10;
            case "L" : return 50;
            case "C" : return 100;
            case "D" : return 500;
            case "M" : return 1000;
            default : return 0;
        }
    }
    
    private int special(String s) {
        switch(s) {
            case "IV" : return 4;
            case "IX" : return 9;
            case "XL" : return 40;
            case "XC" : return 90;
            case "CD" : return 400;
            case "CM" : return 900;
            default : return 0;
        }
    }
}



class sat08527 {
    public int romanToInt(String s) {
        Map<Character,Integer> m=new HashMap<>();
        m.put('I',1);
        m.put('V',5);
        m.put('X',10);
        m.put('L',50);
        m.put('C',100);
        m.put('D',500);
        m.put('M',1000);

        s=s.replaceAll("IV","IIII").replaceAll("IX","VIIII")
            .replaceAll("XL","XXXX").replaceAll("XC","LXXXX")
            .replaceAll("CD","CCCC").replaceAll("CM","DCCCC");
  
        int num=0;
        for(int i=0;i<s.length();i++){
            num=num+m.get(s.charAt(i));
        } 
        return num;
    }
}
