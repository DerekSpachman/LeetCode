/*
 * Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
 * 
 * Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
*/
class Solution {
    public int reverse(int x) {
        try {
            String num = x < 0 ? (x * -1) + "" : x + "";
            String toReturn = "";
            for(int i = num.length() - 1; i >= 0; i--) {
                toReturn += num.charAt(i);
            }
            return x < 0 ? Integer.valueOf("-" + toReturn) : Integer.valueOf(toReturn);
        }
        catch(Exception e) {
            return 0;
        }
    }
}

class LeetSolution {
    public int reverse(int x) {
        int rev = 0;
        while (x != 0) {
            int pop = x % 10;
            x /= 10;
            if (rev > Integer.MAX_VALUE/10 || (rev == Integer.MAX_VALUE / 10 && pop > 7)) return 0;
            if (rev < Integer.MIN_VALUE/10 || (rev == Integer.MIN_VALUE / 10 && pop < -8)) return 0;
            rev = rev * 10 + pop;
        }
        return rev;
    }
}
