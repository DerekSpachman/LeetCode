/**
 * Given an array nums of size n, return the majority element.
 * The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.
 */

class Solution {
    public int majorityElement(int[] nums) {
        Map<Integer, Integer> map = new HashMap<Integer, Integer>(nums.length / 2 + 1);
        
        for(int i = 0; i < nums.length; i++) {
            if(map.get(nums[i]) == null)
                map.put(nums[i], 1);
            else
                map.put(nums[i], map.get(nums[i]) + 1);
        }
        
        System.out.println(map.get(2) +", " + Math.ceil(nums.length / 2.0));
        
        for(int i = 0; i < nums.length; i++)
            if(map.get(nums[i]) >= Math.ceil(nums.length / 2.0))
                return nums[i];
        return 0;
    }
}
